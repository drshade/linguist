use linguist_types::{Heuristics, Languages, VendorPatterns};
use once_cell::sync::Lazy;

// Load up static references to the linguist data generated by build.rs
// These are wrapped in Lazy to avoid doing any unnecessary work
//

const LANGUAGES_DATA: &[u8] = include_bytes!(concat!(env!("OUT_DIR"), "/languages.json"));
const HEURISTICS_DATA: &[u8] = include_bytes!(concat!(env!("OUT_DIR"), "/heuristics.json"));
const VENDOR_DATA: &[u8] = include_bytes!(concat!(env!("OUT_DIR"), "/vendor.json"));

pub static LANGUAGES: Lazy<Languages> = Lazy::new(|| {
    serde_json::from_slice(LANGUAGES_DATA)
        .expect("Failed to deserialize languages.json - this is a bug in the build process")
});

pub static HEURISTICS: Lazy<Heuristics> = Lazy::new(|| {
    serde_json::from_slice(HEURISTICS_DATA)
        .expect("Failed to deserialize heuristics.json - this is a bug in the build process")
});

pub static VENDOR: Lazy<VendorPatterns> = Lazy::new(|| {
    serde_json::from_slice(VENDOR_DATA)
        .expect("Failed to deserialize vendor.json - this is a bug in the build process")
});
